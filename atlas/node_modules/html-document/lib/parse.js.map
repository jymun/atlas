{"version":3,"sources":["../src/parse.js"],"names":[],"mappings":";;;;;qBAMwB,KAAK;;;;2BANN,aAAa;;;;;;;;;AAMrB,SAAS,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE;AACtC,QAAM,KAAK,GAAG,CAAC,IAAI,CAAC,CAAC;AACrB,QAAM,IAAI,GAAG,SAAP,IAAI,GAAc;AACpB,eAAO,KAAK,CAAC,MAAM,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC9D,CAAC;;AAEF,QAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC;;AAEpC,QAAM,MAAM,GAAG,IAAI,yBAAW,MAAM,CAAC;AACjC,qBAAa,EAAA,uBAAC,IAAI,EAAE;AAChB,gBAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;AACzC,iBAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SACnB;;AAED,mBAAW,EAAA,qBAAC,IAAI,EAAE,KAAK,EAAE;AACrB,gBAAI,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;SACpC;;AAED,cAAM,EAAA,gBAAC,IAAI,EAAE;AACT,gBAAI,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;SACrD;;AAED,kBAAU,EAAA,oBAAC,IAAI,EAAE;AACb,gBAAM,GAAG,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;AACxB,gBAAI,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;SAC3B;;AAED,iBAAS,EAAA,mBAAC,IAAI,EAAE;AACZ,gBAAI,EAAE,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;SACpD;KACJ,EAAE,EAAE,oBAAoB,EAAE,IAAI,EAAE,CAAC,CAAC;AACnC,UAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AACnB,UAAM,CAAC,GAAG,EAAE,CAAC;CAChB","file":"parse.js","sourcesContent":["import htmlparser from 'htmlparser2';\n\n/**\n * @param {String} html\n * @param {Node} node\n */\nexport default function parse(html, node) {\n    const stack = [node];\n    const last = function() {\n        return stack.length === 0 ? null : stack[stack.length - 1];\n    };\n\n    const document = node.ownerDocument;\n\n    const parser = new htmlparser.Parser({\n        onopentagname(name) {\n            const elt = document.createElement(name);\n            stack.push(elt);\n        },\n\n        onattribute(name, value) {\n            last().setAttribute(name, value);\n        },\n\n        ontext(text) {\n            last().appendChild(document.createTextNode(text));\n        },\n\n        onclosetag(name) {\n            const elt = stack.pop();\n            last().appendChild(elt);\n        },\n\n        oncomment(data) {\n            last().appendChild(document.createComment(data));\n        },\n    }, { recognizeSelfClosing: true });\n    parser.write(html);\n    parser.end();\n}\n"]}